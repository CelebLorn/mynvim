# dein 
[[plugins]] 
repo='Shougo/dein.vim'

# deinのui
[[plugins]] 
repo='wsdjeg/dein-ui.vim' 
depends='dein.vim' 
# ホップアップの強化 
[[plugins]] 
repo='Shougo/pum.vim' 
hook_add=''' 
	inoremap <C-n>   <Cmd>call pum#map#insert_relative(+1)<CR> 
	inoremap <C-p>   <Cmd>call pum#map#insert_relative(-1)<CR> 
	inoremap <C-y>   <Cmd>call pum#map#confirm()<CR> 
	inoremap <C-e>   <Cmd>call pum#map#cancel()<CR> 
	inoremap <PageDown> <Cmd>call pum#map#insert_relative_page(+1)<CR> 
	inoremap <PageUp>   <Cmd>call pum#map#insert_relative_page(-1)<CR> 
''' 

# vscodeみたいなカラースキーム 
[[plugins]] 
repo='tomasiser/vim-code-dark' 
hook_add = ''' 
	set background=dark 
    au MyAutoCmd VimEnter * nested colorscheme codedark
'''

# ステータスライン 
[[plugins]] 
repo='vim-airline/vim-airline' 
hook_add=''' 
	let g:airline#extensions#tabline#enabled = 1 
    let g:airline#extensions#tabline#formatter = 'jsformatter'
''' 

[[plugins]] 
repo='vim-airline/vim-airline-themes' 
depends='vim-airline/vim-airline' 
hook_add=''' 
	let g:airline_theme='codedark' 
''' 


# ddcの依存
[[plugins]]
repo='vim-denops/denops.vim'



# ddc source
[[plugins]]
repo='matsui54/ddc-dictionary'

[[plugins]]
repo='Shougo/ddc-around'
depends='Shougo/ddc.vim'
hook_add='''
    " Customize global setting
    " Use around source.
    " https://github.com/Shougo/ddc-around
    call ddc#custom#patch_global('sources', ['around'])
'''


# ddc filter
[[plugins]]
repo='Shougo/ddc-matcher_head'
depends='Shougo/ddc.vim'

[[plugins]]
repo='Shougo/ddc-sorter_rank'
depends='Shougo/ddc.vim'
hook_add='''
    " Use matcher_head and sorter_rank.
    " https://github.com/Shougo/ddc-matcher_head
    " https://github.com/Shougo/ddc-sorter_rank
    call ddc#custom#patch_global('sourceOptions', {
          \ '_': {
          \   'matchers': ['matcher_head'],
          \   'sorters': ['sorter_rank']},
          \ })
'''

# 補完
[[plugins]]
repo='Shougo/ddc.vim'
depends=['denops.vim','pum.vim']
on_event = 'InsertEnter'
hook_add='''
    " Change source options
    call ddc#custom#patch_global('sourceOptions', {
          \ 'around': {'mark': 'A'},
          \ })
    call ddc#custom#patch_global('sourceParams', {
          \ 'around': {'maxSize': 500},
          \ })

    " Customize settings on a filetype
    call ddc#custom#patch_filetype(['c', 'cpp'], 'sources', ['around', 'clangd'])
    call ddc#custom#patch_filetype(['c', 'cpp'], 'sourceOptions', {
          \ 'clangd': {'mark': 'C'},
          \ })
    call ddc#custom#patch_filetype('markdown', 'sourceParams', {
          \ 'around': {'maxSize': 100},
          \ })

    " mugen独自の設定
    call ddc#custom#patch_filetype(['mugen'],'sources', ['dictionary'])

    call ddc#custom#patch_filetype(['mugen'],'sourceOptions', {
          \ '_': {'matchers': ['matcher_head']},
          \ 'dictionary': {'mark': 'D'},
          \ })

    call ddc#custom#patch_filetype(['mugen'],'sourceParams', {
            \ 'dictionary': {'dictPaths': 
            \ [
            \ $VIM .. '\dict\mugen_trigger.dict',
            \ $VIM .. '\dict\mugen_statectrler.dict',
            \ $VIM .. '\dict\mugen_param.dict',
            \ $VIM .. '\dict\mugen_mytrig.dict',
            \ $VIM .. '\dict\mugen_redirect.dict',
            \ ],
            \ 'smartCase': v:true,
            \ 'showMenu': v:false,
            \ }
            \})
    " pumと連携
    " call ddc#custom#patch_global('completionMenu', 'pum.vim')
    " <TAB>: completion. ddc.vim
    inoremap <silent><expr> <TAB>
     \ pumvisible() ? '<C-n>' :
     \ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s'<Bar><Bar> getline('.')[col('.') - 2] =~# ';') ?
     \ '<TAB>' : ddc#map#manual_complete()

    " <S-TAB>: completion back. ddc.vim
    inoremap <expr><S-TAB>  pumvisible() ? '<C-p>' : '<C-h>'

    " 補完の動作をいい感じに
    inoremap <expr><CR>  pumvisible() ? '<C-y>' : '<CR>'

    " Use ddc.
    call ddc#enable()
'''

[[plugins]]
repo = 'Shougo/ddc-ui-native'
on_source = 'ddc.vim'
hook_add='''
    call ddc#custom#patch_global('ui', 'native')
'''

# migemo検索 
[[plugins]] 
repo='rhysd/migemo-search.vim' 
hook_add=''' 
	if executable('cmigemo') 
		cnoremap <expr><CR> migemosearch#replace_search_word()."\<CR>" 
	endif 
''' 